version: "3.9"
services:
  backend-app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: my-backend-app:latest
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${API_PORT}:${API_PORT}"
      - "${API_DEBUG_PORT}:5678"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - API_PORT=${API_PORT}

  frontend-app:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "${STREAMLIT_PORT}:${STREAMLIT_PORT}"
      - "${STREAMLIT_DEBUG_PORT}:5678"
    depends_on:
      - backend-app

  db:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_DB_TEST: ${POSTGRES_DB_TEST}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./db/init-multi-db.sh:/docker-entrypoint-initdb.d/init-multi-db.sh
      - ./data:/docker-entrypoint-initdb.d/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  tests:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: my-backend-app:latest
    command: ["pytest", "tests/test_main_integration.py"]
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB_TEST=${POSTGRES_DB_TEST}
      - DB_HOST=db
      - DB_PORT=5432
    depends_on:
      db:
        condition: service_healthy

volumes:
  postgres_data:
