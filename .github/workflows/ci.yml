name: CI

on:
  push:
    branches: [main, develop, ci-test]
  pull_request:
    branches: [main, develop, ci-test]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "Poetry installed"

      - name: Install backend and frontend dependencies with Poetry
        run: |
          # Ensure Poetry is used globally
          echo "Poetry Version: $(poetry --version)"

          # Backend dependencies
          cd ./backend
          poetry config virtualenvs.create false  # Disable virtualenvs if not already done
          poetry install --without dev  # Use --without dev instead of --no-dev

          # Frontend dependencies
          cd ../frontend
          poetry config virtualenvs.create false  # Disable virtualenvs if not already done
          poetry install --without dev  # Use --without dev instead of --no-dev

      - name: Install pre-commit hooks for backend and frontend
        run: |
          cd ./backend
          poetry add --dev pre-commit  # Install pre-commit in the backend
          poetry run pre-commit install  # Install hooks
          cd ../frontend
          poetry add --dev pre-commit  # Install pre-commit in the frontend
          poetry run pre-commit install  # Install hooks

      - name: Run pre-commit checks on all files
        run: |
          cd ./backend
          poetry run pre-commit run --all-files --show-diff-on-failure
          cd ../frontend
          poetry run pre-commit run --all-files --show-diff-on-failure

  build-and-push:
    runs-on: ubuntu-latest
    needs: build-and-test
    environment: production
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/my-backend-app:latest

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/my-frontend-app:latest
