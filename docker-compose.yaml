x-backend-app-base: &backend-app-base
  build:
    context: ./backend
    dockerfile: Dockerfile
  environment:
    - OPENAI_API_KEY=${OPENAI_API_KEY}
    - POSTGRES_USER=${POSTGRES_USER}
    - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    - POSTGRES_DB=${POSTGRES_DB}
    - DB_HOST=${DB_HOST}
    - DB_PORT=${DB_PORT}
    - API_PORT=${API_PORT}
  depends_on:
    db:
      condition: service_healthy

services:
  backend-app:
    <<: *backend-app-base
    image: my-backend-app:latest
    ports:
      - "${API_PORT}:${API_PORT}"
      - "${API_VSCODE_DEBUGGER_PORT}:5678"
    profiles: ["prod", "dev"]

  frontend-app:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "${STREAMLIT_PORT}:${STREAMLIT_PORT}"
      - "${STREAMLIT_VSCODE_DEBUGGER_PORT}:5678"
    depends_on:
      - backend-app
    profiles: ["prod", "dev"]

  db:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_DB_TEST: ${POSTGRES_DB_TEST}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./db/init-multi-db.sh:/docker-entrypoint-initdb.d/init-multi-db.sh
      - ./data:/docker-entrypoint-initdb.d/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    profiles: ["prod", "dev", "test"]

volumes:
  postgres_data:
